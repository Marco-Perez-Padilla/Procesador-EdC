$date
	Fri Nov 15 12:37:54 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 1 ! test_z $end
$var wire 6 " test_Opcode [5:0] $end
$var reg 3 # test_Op [2:0] $end
$var reg 1 $ test_clk $end
$var reg 1 % test_reset $end
$var reg 1 & test_s_inc $end
$var reg 1 ' test_s_inm $end
$var reg 1 ( test_we3 $end
$var reg 1 ) test_wez $end
$scope module camino $end
$var wire 3 * Op [2:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 & s_inc $end
$var wire 1 ' s_inm $end
$var wire 1 ( we3 $end
$var wire 1 ) wez $end
$var wire 1 + zero $end
$var wire 1 ! z $end
$var wire 8 , wd3 [7:0] $end
$var wire 10 - sum_result [9:0] $end
$var wire 8 . reg_alu_2 [7:0] $end
$var wire 8 / reg_alu_1 [7:0] $end
$var wire 10 0 pc_dir [9:0] $end
$var wire 16 1 opcode [15:0] $end
$var wire 10 2 mem_dir [9:0] $end
$var wire 8 3 alu_result [7:0] $end
$var wire 6 4 Opcode [5:0] $end
$scope module ALU $end
$var wire 3 5 Op [2:0] $end
$var wire 8 6 B [7:0] $end
$var wire 8 7 A [7:0] $end
$var reg 8 8 S [7:0] $end
$var reg 1 + zero $end
$upscope $end
$scope module FFZ $end
$var wire 1 ) carga $end
$var wire 1 $ clk $end
$var wire 1 + d $end
$var wire 1 % reset $end
$var reg 1 ! q $end
$upscope $end
$scope module PC $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 10 9 D [9:0] $end
$var parameter 32 : WIDTH $end
$var reg 10 ; Q [9:0] $end
$upscope $end
$scope module banco $end
$var wire 4 < RA1 [3:0] $end
$var wire 4 = RA2 [3:0] $end
$var wire 4 > WA3 [3:0] $end
$var wire 1 $ clk $end
$var wire 1 ( we3 $end
$var wire 8 ? WD3 [7:0] $end
$var wire 8 @ RD2 [7:0] $end
$var wire 8 A RD1 [7:0] $end
$upscope $end
$scope module instruccion $end
$var wire 10 B Address [9:0] $end
$var wire 16 C Data [15:0] $end
$var wire 1 $ clk $end
$upscope $end
$scope module mux_10_bit $end
$var wire 10 D D0 [9:0] $end
$var wire 10 E D1 [9:0] $end
$var wire 1 & s $end
$var wire 10 F Y [9:0] $end
$var parameter 32 G WIDTH $end
$upscope $end
$scope module mux_8_bit $end
$var wire 8 H D0 [7:0] $end
$var wire 8 I D1 [7:0] $end
$var wire 1 ' s $end
$var wire 8 J Y [7:0] $end
$var parameter 32 K WIDTH $end
$upscope $end
$scope module suma_pc $end
$var wire 10 L A [9:0] $end
$var wire 10 M B [9:0] $end
$var wire 10 N Y [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 K
b1010 G
b1010 :
$end
#0
$dumpvars
b1 N
b1 M
b0 L
bx J
b0 I
bx H
b0x0x F
b0 E
b101 D
b100000000000101 C
b0 B
b0 A
b0 @
bx ?
b101 >
b0 =
b0 <
b0 ;
b0x0x 9
bx 8
b0 7
b0 6
bx 5
b10000 4
bx 3
b0 2
b100000000000101 1
b0x0x 0
b0 /
b0 .
b1 -
bx ,
x+
bx *
x)
x(
x'
x&
1%
1$
bx #
b10000 "
0!
$end
#1000
0%
#4000
0$
#8000
bx .
bx 6
bx @
bx /
bx 7
bx A
bx "
bx 4
bx >
bx =
bx <
bx I
bx D
bx 1
bx C
bx -
bx N
b0x0x 2
b0x0x ;
b0x0x B
b0x0x E
b0x0x L
bx ,
bx ?
bx J
x+
bx 3
bx 8
bx H
bx 0
bx 9
bx F
b0 #
b0 *
b0 5
1)
0'
1(
0&
1$
#12000
b0x0x 0
b0x0x 9
b0x0x F
1&
0$
#16000
x!
1$
#20000
0$
#24000
1$
#28000
1'
0(
0$
#32000
1$
#36000
0$
#40000
1$
#44000
0'
1(
0$
#48000
1$
#52000
bx 0
bx 9
bx F
0)
0&
0$
#56000
bx 2
bx ;
bx B
bx E
bx L
1)
1$
#60000
0$
